<html lang="es">

<head>
    <%- include('partials/headHome.ejs') %>
        <title>Ranking - UCAB SPORT</title>
        <link rel="stylesheet" href="/css/equipos.css">
</head>

<body>
    <div class="preloader">
        <div class="spinner"></div>
    </div>
    <div class="content">
        <%- include('partials/navHome.ejs') %>

        <%- include('partials/sliders.ejs') %>

        <% if (jugadores.length > 0) { %>
            <div class="container mt-5">
                <h1 class="text-center">Equipos de <%= ranking[0].nombreDeporte %></h1>
                <div class="row">
                    <!-- En pantallas grandes, muestra 4 equipos por fila -->
                    <div class="col-lg-3 col-md-6 col-sm-12 mb-3">
                        <div class="tabs nav flex-column nav-pills" id="teamButtons" role="tablist" aria-orientation="vertical">
                            <!-- Los botones de equipo se generarán aquí -->
                        </div>
                    </div>
                    <!-- En pantallas grandes, muestra los jugadores en el resto del ancho -->
                    <div class="col-lg-9 col-md-6 col-sm-12">
                        <div class="tab-content" id="teamPlayers">
                            <!-- La lista de jugadores se generará aquí -->
                        </div>
                    </div>
                </div>
            </div>
            <% } %>


            <div class="col-xs-12 col-md-10 col-lg-11 mx-auto mt-5">
                <h1 class="text-center titulosRankings">RANKING DE <%= ranking[0].nombreDeporte %> 
                </h1>

                <div class="row">
                    <div class="table-responsive">
                        <table class="table table-bordered table-striped text-center mt-4" id="miTabla">
                            <thead>
                                <tr class="bg-primary text-white">
                                    <th scope="col">#</th>
                                    <th scope="col">Nombre</th>
                                    <th scope="col">Carrera</th>
                                    <th scope="col">Puntos</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% ranking.forEach((ranking)=>{ %>
                                    <tr>
                                        <td>

                                        </td>
                                        <td>
                                            <%= ranking.nombreJugador %>
                                        </td>
                                        <td>
                                            <%= ranking.nombreCarrera %>
                                        </td>
                                        <td>
                                            <%= ranking.puntos %>
                                        </td>
                                    </tr>
                                    <% }) %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>


            <% if (deportes.length> 0) { %>
                <%- include('partials/rankingsDisponibles.ejs') %>
            <% } %>

            <%- include('partials/seccionNoticias.ejs') %>
            <%- include('partials/footer.ejs') %>


    </div> <!-- Cierre del preloader -->

    <%- include('partials/scriptsHome.ejs') %>
    <script>

        // Datos de ejemplo para los equipos y jugadores


const datosEquiposJugadores = JSON.parse('<%- JSON.stringify(jugadores) %>');

const teamButtonsContainer = document.getElementById('teamButtons');
const teamPlayersContainer = document.getElementById('teamPlayers');

// Crear un objeto para agrupar jugadores por equipo
const equipos = {};

// Organizar los datos en el objeto 'equipos'
datosEquiposJugadores.forEach((fila) => {
const nombreEquipo = fila.NombreEquipo;
const nombreJugador = fila.NombreJugador;

if (!equipos[nombreEquipo]) {
equipos[nombreEquipo] = [];
}

equipos[nombreEquipo].push(nombreJugador);
});

// Crear botones para cada equipo
for (const nombreEquipo in equipos) {
const button = document.createElement('button');
button.textContent = nombreEquipo;
button.classList.add('tablinks');

// Agregar un evento para mostrar los jugadores cuando se hace clic en el botón
button.addEventListener('click', () => {
mostrarJugadores(nombreEquipo, equipos[nombreEquipo]);
});

teamButtonsContainer.appendChild(button);
}

// Función para mostrar la lista de jugadores de un equipo
function mostrarJugadores(nombreEquipo, jugadores) {
// Limpiar el contenedor de jugadores
teamPlayersContainer.innerHTML = '';

// Crear una lista de jugadores para el equipo seleccionado
const ul = document.createElement('ul');

jugadores.forEach((nombreJugador) => {
const li = document.createElement('li');
li.textContent = nombreJugador;
ul.appendChild(li);
});

teamPlayersContainer.appendChild(ul);

// Marcar el botón de equipo seleccionado
const buttons = document.querySelectorAll('.tablinks');
buttons.forEach((button) => {
button.classList.remove('active');
if (button.textContent === nombreEquipo) {
button.classList.add('active');
}
});
}

// Función para crear los tabs de equipos
function crearTabsEquipos() {
const teamTabsContainer = document.getElementById('teamButtons');
const teamPlayersContainer = document.getElementById('teamPlayers');

// Crear los tabs de equipos
equiposYJugadores.forEach((equipo, index) => {
const tab = document.createElement('div');
tab.classList.add('tab');
tab.setAttribute('id', equipo.NombreEquipo);

const button = document.createElement('button');
button.textContent = equipo.NombreEquipo;
button.classList.add('tablinks');

// Agregar un evento para mostrar los jugadores del equipo al hacer clic en el tab
button.addEventListener('click', () => {
mostrarJugadoresEquipo(equipo.NombreEquipo);
});

tab.appendChild(button);
teamTabsContainer.appendChild(tab);


});
}

// Llamar a la función para crear los tabs de equipos al cargar la página
window.addEventListener('load', crearTabsEquipos);





    </script>
        <script>
            $(document).ready(function () {
               
                var tabla = $('#miTabla').DataTable({
                    "order": [[3, "desc"]], // Ordenar por la columna de Puntos en orden descendente
                    lengthMenu: [[10, 20, 30, 50, 100, -1], [10, 20, 30, 50, 100, 'Todos']],
                    columnDefs: [{
                        orderable: false,
                        targets: [0, 1, 2, 3] // deshabilitar ordenamiento en la columna "Acciones"
                    }],
                    "language": {
                        "lengthMenu": "Mostrar TOP _MENU_ ",
                        "zeroRecords": "No se encontraron registros",
                        "info": "",
                        "infoEmpty": "No hay registros disponibles",
                        "infoFiltered": "(filtrado de _MAX_ registros totales)",
                        "search": "Buscar:",
                        "paginate": {
                            "first": "Primero",
                            "last": "Último",
                            "next": "Siguiente",
                            "previous": "Anterior"
                        }
                    },

                    "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                        var index = iDisplayIndex + 1; // Obtener el índice de la fila después de filtrar y sumar 1
                        $('td:eq(0)', nRow).text(index); // Actualizar el número de posición en la primera columna
                        return nRow;
                    }
                });

                tabla.on('draw.dt', function () {
                    // Obtener las filas visibles en la tabla
                    var rows = tabla.rows({ page: 'current' }).nodes();

                    // Actualizar la posición de ranking para cada fila visible
                    var i, rankingPosition;
                    for (i = 0; i < rows.length; i++) {
                        rankingPosition = tabla.page.info().start + i + 1;
                        $(rows[i]).find('td:eq(0)').text(rankingPosition);
                    }
                });

                tabla.on('page.dt', function () {
                    // Redibujar la tabla después de cambiar de página
                    tabla.draw(false);

                });
                // mostrar variable de nombreDeporte evniada desde el controlador
                let receivedVariable = "<%= deportes.nombreDeporte %>"; // recibimos la variable del controlador
                //Función para filtrar los valores
                function filterTable(receivedVariable) {
                    tabla.search(receivedVariable).draw();
                }
                // Llamamos a la función y le pasamos la variable recibida
                filterTable(receivedVariable);
                // fin de filtrar valores
                $('.dataTables_filter').hide(); // ocultar el buscador
            });


        </script>



</body>

</html>